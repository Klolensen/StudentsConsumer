//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentsConsumer.StudentService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStudent", ReplyAction="http://tempuri.org/IService1/AddStudentResponse")]
        void AddStudent(string navn, string klasseNavn, string rum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddStudent", ReplyAction="http://tempuri.org/IService1/AddStudentResponse")]
        System.Threading.Tasks.Task AddStudentAsync(string navn, string klasseNavn, string rum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindStudents", ReplyAction="http://tempuri.org/IService1/FindStudentsResponse")]
        string FindStudents(string navn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/FindStudents", ReplyAction="http://tempuri.org/IService1/FindStudentsResponse")]
        System.Threading.Tasks.Task<string> FindStudentsAsync(string navn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStudent", ReplyAction="http://tempuri.org/IService1/GetAllStudentResponse")]
        string[] GetAllStudent();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllStudent", ReplyAction="http://tempuri.org/IService1/GetAllStudentResponse")]
        System.Threading.Tasks.Task<string[]> GetAllStudentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveStudent", ReplyAction="http://tempuri.org/IService1/RemoveStudentResponse")]
        void RemoveStudent(string navn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/RemoveStudent", ReplyAction="http://tempuri.org/IService1/RemoveStudentResponse")]
        System.Threading.Tasks.Task RemoveStudentAsync(string navn);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        void EditStudent(string nuværendeNavn, string nytNavn, string nytKlasseNavn, string nytRum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditStudent", ReplyAction="http://tempuri.org/IService1/EditStudentResponse")]
        System.Threading.Tasks.Task EditStudentAsync(string nuværendeNavn, string nytNavn, string nytKlasseNavn, string nytRum);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : StudentsConsumer.StudentService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<StudentsConsumer.StudentService.IService1>, StudentsConsumer.StudentService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void AddStudent(string navn, string klasseNavn, string rum) {
            base.Channel.AddStudent(navn, klasseNavn, rum);
        }
        
        public System.Threading.Tasks.Task AddStudentAsync(string navn, string klasseNavn, string rum) {
            return base.Channel.AddStudentAsync(navn, klasseNavn, rum);
        }
        
        public string FindStudents(string navn) {
            return base.Channel.FindStudents(navn);
        }
        
        public System.Threading.Tasks.Task<string> FindStudentsAsync(string navn) {
            return base.Channel.FindStudentsAsync(navn);
        }
        
        public string[] GetAllStudent() {
            return base.Channel.GetAllStudent();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllStudentAsync() {
            return base.Channel.GetAllStudentAsync();
        }
        
        public void RemoveStudent(string navn) {
            base.Channel.RemoveStudent(navn);
        }
        
        public System.Threading.Tasks.Task RemoveStudentAsync(string navn) {
            return base.Channel.RemoveStudentAsync(navn);
        }
        
        public void EditStudent(string nuværendeNavn, string nytNavn, string nytKlasseNavn, string nytRum) {
            base.Channel.EditStudent(nuværendeNavn, nytNavn, nytKlasseNavn, nytRum);
        }
        
        public System.Threading.Tasks.Task EditStudentAsync(string nuværendeNavn, string nytNavn, string nytKlasseNavn, string nytRum) {
            return base.Channel.EditStudentAsync(nuværendeNavn, nytNavn, nytKlasseNavn, nytRum);
        }
    }
}
